* dired
=dired= is emacs' built in file manager.
** dired-sort-dirs
Dired sorting should lump directories first because I'm used to it.
#+begin_src emacs-lisp :results silent
      (setq dired-listing-switches "-alh --group-directories-first")
  (eval-after-load "dired" '(progn (define-key dired-mode-map (kbd "C-c w") 'dired-toggle-read-only)))
#+end_src
** transparently create directories when renaming
#+begin_src emacs-lisp :results silent
  (defadvice dired-mark-read-file-name (after rv:dired-create-dir-when-needed (prompt dir op-symbol arg files &optional default) activate)
    (when (member op-symbol '(copy move))
      (let ((directory-name (if (< 1 (length files))
                                ad-return-value
                                (file-name-directory ad-return-value))))
        (when (and (not (file-directory-p directory-name))
                   (y-or-n-p (format "directory %s doesn't exist, create it?" directory-name)))
          (make-directory directory-name t)))))

#+end_src
** compute size with du
from [[https://oremacs.com/2015/01/12/dired-file-size/][oremacs]], circa 2015:
#+begin_src emacs-lisp :results silent
  (defun dired-get-size ()
    (interactive)
    (let ((files (dired-get-marked-files)))
      (with-temp-buffer
        (apply 'call-process "/usr/bin/du" nil t nil "-sch" files)
        (message
         "Size of all marked files: %s"
         (progn
           (re-search-backward "\\(^[ 0-9.,]+[A-Za-z]+\\).*total$")
           (match-string 1))))))

;;(define-key dired-mode-map (kbd "z") 'dired-get-size)
#+end_src
