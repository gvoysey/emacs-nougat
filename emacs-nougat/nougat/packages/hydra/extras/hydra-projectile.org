** hydra-projectile
#+begin_src emacs-lisp
  (defun projectile-run-vterm-other-window (&optional arg)
    "Invoke `vterm' in the project's root.
     Switch to the project specific term buffer if it already exists.
     Use a prefix argument ARG to indicate creation of a new process instead."
    (interactive "P")
    (let* ((project (projectile-ensure-project (projectile-project-root)))
           (buffer (projectile-generate-process-name "vterm" arg)))
      (unless (buffer-live-p (get-buffer buffer))
        (unless (require 'vterm nil 'noerror)
          (error "Package 'vterm' is not available"))
        (projectile-with-default-dir project
          (vterm-other-window)))
      (switch-to-buffer buffer)))

  (defun dired-open-other-window nil
    "Open dired in another window to the right of the current one, but do not bring focus there."
    (interactive) (save-excursion (with-selected-window (split-window-right)(balance-windows) (dired  default-directory))))

  (pretty-hydra-define hydra-projectile (:title "Quick Navigation" :quit-key "<XF86Launch8>")
    ("Open"
     (("f"   counsel-projectile-find-file-dwim "Find project file")
      ("z"   counsel-projectile-switch-to-buffer "Switch to project buffer")
      ("w"   counsel-projectile-switch-project "Switch project")
      ("v"   projectile-run-vterm-other-window "Vterm in project")
      ("d"   dired-open-other-window "Dired in project"))

    "Search"
    (("a"   counsel-projectile-rg "rg in project")
     ("A" counsel-rg "rg")
     ("o"   projectile-multi-occur "Occur in project")
     ("g"   counsel-projectile-git-grep "git grep")
     ("r" counsel-fzf "fzf")
     ("h" org-recent-headings)
     )

    "Buffers"
    (("k"   projectile-kill-buffers "Kill project")
     ("l" magit-log-buffer-file "git file log")
     ("i" (ibuffer t nil nil t) "ibuffer"))

    "Projectile"
    (("C"   projectile-invalidate-cache "Rebuild cache")
     ("x"   projectile-remove-known-project "Remove projects")
     ("X"   projectile-cleanup-known-projects "Cleanup"))
    )
  )

  (global-set-key (kbd "<XF86Launch8>") 'hydra-projectile/body)
#+end_src
