* org-avy
Quickly jump to visible headers at various depths.
** goto-level
Accepts a numeric level and offers an avy jump to all headings visible at that level.
#+begin_src emacs-lisp :results silent
  (defun org-avy-goto-level (&optional num)
    (interactive (list
                  (read-number "Select heading level: " (org-current-level))))
    (avy--generic-jump
     (format "^%s " (regexp-quote (make-string num ?*)))
     nil
     'pre))
#+end_src

** same-level
Offers an avy jump to all visible siblings of the heading containing the point.
#+begin_src emacs-lisp :results silent
  (defun org-avy-same-level (&optional all)
    (interactive "P")
    (let ((org-level (org-current-level)))
      (avy--generic-jump
       (concat "^"
               (regexp-quote
                (make-string org-level ?*))
               " ")
       nil
       'pre
       (unless (or all (= org-level 1))
         (save-excursion
           (outline-up-heading 1)
           (point)))
       (unless (or all (= org-level 1))
         (save-excursion
           (outline-up-heading 1)
           (org-end-of-subtree))))))
#+end_src

** parent-level
Offers an avy jump to all visible headings at the level of the parent of the heading containing
the point.
#+begin_src emacs-lisp :results silent
  (defun org-avy-parent-level (&optional all)
    (interactive "P")
    (let ((org-level (org-current-level)))
      (if (= org-level 1)
          (message "Already at top level.")
        (avy--generic-jump
         (concat "^"
                 (regexp-quote
                  (make-string
                   (- org-level 1)
                   ?*))
                 " ")
         nil
         'pre
         (unless (or all (= org-level 2))
           (save-excursion
             (outline-up-heading 2)
             (point)))
         (unless (or all (= org-level 2))
           (save-excursion
             (outline-up-heading 2)
             (org-end-of-subtree)))))))
#+end_src

** child-level
Offers an avy jump to all visible children of the heading containing the point.
#+begin_src emacs-lisp :results silent
  (defun org-avy-child-level (&optional all)
    (interactive "P")
    (if (save-excursion (org-goto-first-child))
        (let ((org-level (org-current-level)))
          (avy--generic-jump
           (concat "^"
                   (regexp-quote
                    (make-string (+ org-level 1) ?*))
                   " ")
           nil
           'pre
           (unless all
             (save-excursion
               (ignore-errors
                 (outline-up-heading 0))
               (point)))
           (unless all
             (save-excursion
               (ignore-errors
                 (outline-up-heading 0))
               (org-end-of-subtree)))))
      (message "Heading has no children.")))
#+end_src

