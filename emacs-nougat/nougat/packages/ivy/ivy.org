* install and configure
#+begin_src emacs-lisp
  (use-package swiper
    :bind (("C-s" . swiper-isearch)
           ("C-r" . swiper-backward)
           ("M-%" . anzu-isearch-query-replace))
    )

  (use-package ivy
    :bind ( ("C-x b" . ivy-switch-buffer)))
  (use-package counsel
    :bind (("M-x" . counsel-M-x)
           ("C-h f" . counsel-apropos)
           ("C-x C-f" . counsel-find-file)
           ("C-c u" . counsel-unicode-char)
           ("C-x C-b" . ibuffer)
           ("C-x y" . counsel-yank-pop)
           ("C-x C-r" . counsel-recentf)
           ("C-x r l" . counsel-bookmark)
           ("C-h b" . counsel-descbinds)
           ("C-c k" . counsel-ag)
           ("C-c n" . counsel-fzf)
           )
  )
  (use-package ivy-hydra)
#+end_src

#+RESULTS:

Configure
#+begin_src emacs-lisp
  (ivy-mode 1)
  (setq ivy-use-virtual-buffers t)
  (setq ivy-count-format "(%d/%d) ")
  (setq projectile-completion-system 'ivy)
#+end_src

** counsel-projectile

#+begin_src emacs-lisp
      (use-package counsel-projectile
       :straight (counsel-projectile :type git
                     :host github
                     :repo "ericdanan/counsel-projectile")
       :config
           )
    (define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)
  (counsel-projectile-modify-action
   'counsel-projectile-switch-project-action
   '((default counsel-projectile-switch-project-action-vc)))
#+end_src

** ivy-bibtex

#+begin_src emacs-lisp
   (use-package ivy-bibtex
    :straight (ivy-bibtex
             :files ("ivy-bibtex.el")
               :type git
                  :host github
                  :repo "tmalsburg/helm-bibtex")
    :config
  (setq ivy-re-builders-alist
       '((ivy-bibtex . ivy--regex-ignore-order)
         (t . ivy--regex-plus)))
       (setq-default bibtex-completion-bibliography
             (concat my/org-path-name "library.bib"))
       (setq-default bibtex-completion-pdf-field "Files")
(setq bibtex-completion-notes-path (concat my/org-path-name "reference-notes"))
        )
#+end_src
